{"version":3,"file":"ngx-barcodejs.js","sources":["../../../projects/ngx-barcodejs/src/lib/ngx-barcode-js/ngx-barcode/ngx-barcode.component.ts","../../../projects/ngx-barcodejs/src/lib/ngx-barcode-js/ngx-barcode-js.module.ts","../../../projects/ngx-barcodejs/src/public-api.ts","../../../projects/ngx-barcodejs/src/ngx-barcodejs.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as jsBarcode from 'jsbarcode';\n\n@Component({\n  selector: 'ngx-barcode',\n  template: '<ng-content></ng-content>',\n})\nexport class NgxBarcodeComponent implements OnChanges {\n  @Input() barcodeValue: string = '';\n  @Input() font = 'Open Sans';\n\n  public get options(): Record<string, string | number> {\n    return {\n      font: this.font,\n    };\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2\n  ) {\n    this.elementRef.nativeElement.style.display = 'inline-block';\n    this.elementRef.nativeElement.classList.add('ngx-barcode');\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this._initBarcode();\n  }\n\n  private _initBarcode() {\n    if (!this.barcodeValue) {\n      return;\n    }\n\n    const svgElement: Element = this.renderer.createElement('svg', 'svg');\n    jsBarcode(svgElement, this.barcodeValue, this.options);\n\n    this._clearBarcode();\n    this.renderer.appendChild(this.elementRef.nativeElement, svgElement);\n  }\n\n  private _clearBarcode(): void {\n    const layoutElement: HTMLElement = this.elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n\n      // We remove all svg elements in order to remove any old barcode svg.\n      if (child.nodeName.toLowerCase() === 'svg') {\n        child.remove();\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxBarcodeComponent } from './ngx-barcode/ngx-barcode.component';\n\n@NgModule({\n  declarations: [NgxBarcodeComponent],\n  imports: [CommonModule],\n  exports: [NgxBarcodeComponent],\n})\nexport class NgxBarcodeJsModule {}\n","/*\n * Public API Surface of ngx-barcodejs\n */\n\nexport * from './lib/ngx-barcode-js/ngx-barcode/ngx-barcode.component';\nexport * from './lib/ngx-barcode-js/ngx-barcode-js.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAca,mBAAmB;IAU9B,YACU,UAAmC,EACnC,QAAmB;QADnB,eAAU,GAAV,UAAU,CAAyB;QACnC,aAAQ,GAAR,QAAQ,CAAW;QAXpB,iBAAY,GAAW,EAAE,CAAC;QAC1B,SAAI,GAAG,WAAW,CAAC;QAY1B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;KAC5D;IAZD,IAAW,OAAO;QAChB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;KACH;IAUM,WAAW,CAAC,OAAsB;QACvC,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO;SACR;QAED,MAAM,UAAU,GAAY,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACtE,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEvD,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;KACtE;IAEO,aAAa;QACnB,MAAM,aAAa,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACjE,IAAI,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC;QAEjD,OAAO,UAAU,EAAE,EAAE;YACnB,MAAM,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;YAGnD,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;gBAC1C,KAAK,CAAC,MAAM,EAAE,CAAC;aAChB;SACF;KACF;;;YAlDF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,2BAA2B;aACtC;;;YAXC,UAAU;YAGV,SAAS;;;2BAUR,KAAK;mBACL,KAAK;;;MCPK,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;ACRD;;;;ACAA;;;;;;"}