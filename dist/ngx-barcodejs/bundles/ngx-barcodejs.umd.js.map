{"version":3,"file":"ngx-barcodejs.umd.js","sources":["../../../projects/ngx-barcodejs/src/lib/ngx-barcode-js/ngx-barcode/ngx-barcode.component.ts","../../../projects/ngx-barcodejs/src/lib/ngx-barcode-js/ngx-barcode-js.module.ts","../../../projects/ngx-barcodejs/src/public-api.ts","../../../projects/ngx-barcodejs/src/ngx-barcodejs.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport * as jsBarcode from 'jsbarcode';\n\n@Component({\n  selector: 'ngx-barcode',\n  template: '<ng-content></ng-content>',\n})\nexport class NgxBarcodeComponent implements OnChanges {\n  @Input() barcodeValue: string = '';\n  @Input() font = 'Open Sans';\n\n  public get options(): Record<string, string | number> {\n    return {\n      font: this.font,\n    };\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2\n  ) {\n    this.elementRef.nativeElement.style.display = 'inline-block';\n    this.elementRef.nativeElement.classList.add('ngx-barcode');\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this._initBarcode();\n  }\n\n  private _initBarcode() {\n    if (!this.barcodeValue) {\n      return;\n    }\n\n    const svgElement: Element = this.renderer.createElement('svg', 'svg');\n    jsBarcode(svgElement, this.barcodeValue, this.options);\n\n    this._clearBarcode();\n    this.renderer.appendChild(this.elementRef.nativeElement, svgElement);\n  }\n\n  private _clearBarcode(): void {\n    const layoutElement: HTMLElement = this.elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n\n      // We remove all svg elements in order to remove any old barcode svg.\n      if (child.nodeName.toLowerCase() === 'svg') {\n        child.remove();\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxBarcodeComponent } from './ngx-barcode/ngx-barcode.component';\n\n@NgModule({\n  declarations: [NgxBarcodeComponent],\n  imports: [CommonModule],\n  exports: [NgxBarcodeComponent],\n})\nexport class NgxBarcodeJsModule {}\n","/*\n * Public API Surface of ngx-barcodejs\n */\n\nexport * from './lib/ngx-barcode-js/ngx-barcode/ngx-barcode.component';\nexport * from './lib/ngx-barcode-js/ngx-barcode-js.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["jsBarcode","Component","ElementRef","Renderer2","Input","NgModule","CommonModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAwBE,6BACU,UAAmC,EACnC,QAAmB;YADnB,eAAU,GAAV,UAAU,CAAyB;YACnC,aAAQ,GAAR,QAAQ,CAAW;YAXpB,iBAAY,GAAW,EAAE,CAAC;YAC1B,SAAI,GAAG,WAAW,CAAC;YAY1B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,cAAc,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SAC5D;QAZD,sBAAW,wCAAO;iBAAlB;gBACE,OAAO;oBACL,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,CAAC;aACH;;;WAAA;QAUM,yCAAW,GAAX,UAAY,OAAsB;YACvC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;QAEO,0CAAY,GAAZ;YACN,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,OAAO;aACR;YAED,IAAM,UAAU,GAAY,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACtEA,oBAAS,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAEvD,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;SACtE;QAEO,2CAAa,GAAb;YACN,IAAM,aAAa,GAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YACjE,IAAI,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC;YAEjD,OAAO,UAAU,EAAE,EAAE;gBACnB,IAAM,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;gBAGnD,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,KAAK,EAAE;oBAC1C,KAAK,CAAC,MAAM,EAAE,CAAC;iBAChB;aACF;SACF;;;;gBAlDFC,cAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,2BAA2B;iBACtC;;;gBAXCC,eAAU;gBAGVC,cAAS;;;+BAURC,UAAK;uBACLA,UAAK;;;;QCPR;;;;;gBALCC,aAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAACC,mBAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B;;;ICRD;;;;ICAA;;;;;;;;;;;;;"}